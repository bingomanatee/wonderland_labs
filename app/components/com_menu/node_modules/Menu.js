var util = require('util');
var path = require('path');
var _ = require('underscore');

var NE = require('nuby-express');
var digest_config = NE.utility.digest_config;

var ensure_name = NE.utility.ensure_name;
var _DEBUG = false;

var _known_keys = ['exec'];

function Menu(config) {
    var self = this;
    digest_config(this, config, {
        _custom_config:function (key, value, target) {
            if (_DEBUG)   console.log('custom key: %s for %s', key, util.inspect(target));
            if (_.include(_known_keys, key)) {
                target[key] = value;
                return true;
            }
            return false;
        }
    });
    if (!this.name) {
        if (/_menu/.test(this.path)) {
            ensure_name(this, /^(.*)(_menu)$/i, 1);
        } else {
            ensure_name(this, /.*/);
        }
    }
}

_.extend(Menu.prototype, {
    CLASS:'MENU',
    type:'menu',
    exec:function (rs, menus, cb) {
        throw new Error('must override exec')
    },
    add_menu_items:function (menus, menu_name, group, make_menu) {
        if (!menus[menu_name]) {
            if (make_menu) {
                menus[menu_name] = {
                    name:menu_name,
                    items:[
                    ]
                }
            } else {
                return;
            }
        }
        menus[menu_name].items.push(group);
    }
})


module.exports = Menu;