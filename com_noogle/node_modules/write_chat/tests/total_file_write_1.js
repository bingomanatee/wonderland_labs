var tap = require('tap');
var write_chat = require('./../index');
var _ = require('underscore');
var util = require('util');
var fs = require('fs');
var request = require('request');
var DOMAIN_NODEJS_DEBUGGABLE_COM = 'http://nodejs.debuggable.com';
var DOMAIN_STATIC_IZS_ME = 'http://static.izs.me/irclogs/node.js'
var path = require('path');
var COM_NOOGLE_ROOT = path.resolve(__dirname, '../../../');
var CHAT_FILE_DIR = path.resolve(COM_NOOGLE_ROOT, 'chat_files');
var wrench = require('wrench');

/**
 * note - these "Tests" run on REAL search datbase!
 * only run BEFORE the app is up!
 */
tap.test('large import', function(t){

    write_chat.files_at_domain(DOMAIN_STATIC_IZS_ME, function(err, files){
        if (err){
             console.log('error reading files: %s ',   util.inspect(err));
            t.end();
            return;
        }

        t.ok(files.length() > 50, 'more than 50 files found')
        var file_dir = path.resolve(CHAT_FILE_DIR, 'static.izs.me');
        console.log('writing large import into %s', file_dir)

        console.log('files: %s', files.length()); // no way of knowing how many files that is
        t.equals(files.dom_url.host, 'static.izs.me', 'host static.izs.me detection');
        if (files.length() > 0){
            if (fs.existsSync(file_dir)){
                wrench.rmdirSyncRecursive(file_dir);
            } else {
                console.log('no dir %s - nothing to delete ', file_dir);
            }
            t.ok(!fs.existsSync(file_dir), 'file directory ' + file_dir + ' erased');
            if (fs.existsSync(file_dir)){
                console.log('file dir has NOT been erased - terminating early');
                return t.end();
            }
            t.ok(!fs.existsSync(files.files[0].local_copy()), 'local file has not been created yet');

            var once = false;
            files.import_all(function(err, status){
                if (err){
                    console.log('import failed');
                    t.fail();
                    t.end();
                    return;
                } else {

                    t.ok(fs.existsSync(files.files[0].local_copy()), 'local file has  been CREATED!');
                }
                t.end();
            });

        } else {
            console.log("NO FILES - not doing final tests")
            t.end();
        }
    }, 'all');
});
