var child_process = require('child_process');
var path = require('path');
var job_pid = null;

var _DEBUG = true;
var SCAN_DAEMON = path.resolve(__dirname, 'scan_file_daemon');

module.exports = function (callback) {
    _scan_once(callback, 0);

}

function _kill_scan_job() {
    try {
        process.kill(job_pid);
        job_pid = false;
    } catch (err) {
        console.log('process %s kill error: %s', job_pid, err);
    }
}

var sc_timeout;

function _scan_once(callback, scans) {
    console.log('scan once: scans %s', scans);

    sc_timeout = setTimeout(function () {
        console.log('restarting _scan_once');
        sc_timeout = null;
        process.nextTick(function () {
            _scan_once(callback, scans);
        })
    }, 20000);

    if (job_pid) {
        _kill_scan_job();
    }
    var node_path = process.execPath;

    console.log('exec path : %s', node_path);

    var scan_job = child_process.spawn(node_path, [SCAN_DAEMON]);
    job_pid = scan_job.pid;

    console.log('scan job - pid %s', job_pid);

    /*  scan_job.on('exit', function (response) {
     //@TODO - restart.
     console.log("DONE WITH DAEMON RUN");

     if (response == 'all files scanned'){
     callback(null, scans)
     }
     })*/

    scan_job.stdout.on('data', function (data) {
        //  var s = 'scan file daemon|data retrive|scanning file'.split('|')[signal_count++]
        //   var regex = new RegExp(s)
        //   t.ok(regex.test(data), 'got expected signal ' + s);

        if (data == 'all files scanned') {
            if (sc_timeout){
                clearTimeout(sc_timeout);
            }
            process.stdout.write("\n ___________ DONE SCANNING ___________ \n")
            callback(null, scans);
        } else if (/^finished file/.test(data)) {
            process.stdout.write("DONE with scan " + scans + "\n");
            if (sc_timeout){
                clearTimeout(sc_timeout);
            }
            process.nextTick(function () {
                _scan_once(callback, scans + 1);
            })
        } else if (/^good line/.test(data) || /\{"ok":"true"/.test(data)) {
            // do nothing.
            process.stdout.write('.');
        } else {
            if (_DEBUG) console.log('ignoring strange response: %s', data);
        }
    })

    scan_job.stderr.on('data', function (response) {
        console.log('DAEMON ERROR: %s', '' + response);

        if (sc_timeout){
            clearTimeout(sc_timeout);
        }

        callback(response);
    })
}

if (process.argv.length > 2) {
    if (process.argv[2] == 'run') {
        console.log('STARTING SCAN DAEMON')
        module.exports(function (err, result) {
            if (err) {
                console.llg('ERROR DURING SCAN DAEMON: %s', err.message ? err.message : err);
            } else {
                console.log('FINISHED RUNNING SCAN DAEMON: scans = %s', result);
            }
        });
    }
}